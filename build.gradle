buildscript {
    ext {
        queryDslVersion = '5.0.0'
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'
   // implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'mysql:mysql-connector-java'


    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
  //  implementation 'org.springframework.boot:spring-boot-starter-security'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

  //  implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.6.8'
  //  implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'com.googlecode.json-simple:json-simple:1.1.1' // JSONArray, JSONObject 사용. FileUpload에서, FileJson의 변환에서 필요하기 때문에.
    implementation 'org.springframework.boot:spring-boot-starter-json'  //LocalDateTime 충돌방지, ObjectMapper사용할 때.
}

test {
    useJUnitPlatform()
}

// Gradle 5.0 이상
def querydslDir = "${buildDir}/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
    main.resources.excludes = [ 'static/sql/**', 'static/markup/**', 'static/user/**' ]
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    querydsl.extendsFrom compileClasspath
}